{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","robot","id","alt","name","email","CardList","robots","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredrobots","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAKaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,MAAMC,GAAtC,0BAAkEC,IAAI,WAC9E,mCAAOL,EAAMG,MAAMG,KAAnB,OACA,kCAAMN,EAAMG,MAAMI,MAAlB,WCFKC,G,MAAU,SAAAR,GAAK,OAC5B,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,OAAOC,KAAI,SAAAP,GAAK,OAClB,cAAC,EAAD,CAAuBA,MAAQA,GAAnBA,EAAMC,WCPjBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAErB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAeA,EACfG,SAAWF,MCoCJG,G,wDAtCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,OAAQ,GACRS,YAAa,IALJ,E,qDASb,WAAqB,IAAD,OAClBC,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,OAAQc,S,oBAGzC,WAAU,IAAD,OAEP,EAAgCE,KAAKR,MAA7BR,EAAR,EAAQA,OAAQS,EAAhB,EAAgBA,YACVQ,EAAiBjB,EAAOkB,QAAO,SAAAxB,GAAK,OACxCA,EAAMG,KAAKsB,cAAcC,SAASX,EAAYU,kBAGhD,OACE,sBAAK3B,UAAU,MAAf,UAEE,gDAEA,cAAC,EAAD,CACEW,YAAY,gBACZC,aAAe,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAG5D,cAAC,EAAD,CAAUvB,OAAQiB,W,GAjCRO,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5b09d7da.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './card.styles.css';\n\n\nexport const Card = props => (\n    <div className=\"card-container\">\n        <img src={`https://robohash.org/${props.robot.id}?set=set1&size=180x180`} alt=\"moster\" />\n        <h2> { props.robot.name } </h2> \n        <p> { props.robot.email } </p>\n    </div>\n);","import React from \"react\";\n\nimport { Card } from \"../card/card.component\";\n\nimport './card-list.styles.css';\n\n\nexport const CardList= props => (\n<div className=\"card-list\">\n    {\n        props.robots.map(robot => (            \n            <Card key={ robot.id } robot={ robot } />\n        ))          \n    }\n</div>\n);","import React from \"react\";\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) =>\n(\n    <input\n        className=\"search\" \n        type=\"search\" \n        placeholder= { placeholder }\n        onChange={ handleChange }\n        //onChange={ e => this.setState({ searchField: e.target.value}) } \n    />\n);","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = { \n      robots: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ robots: users }));\n  }\n\n  render() {\n\n    const { robots, searchField } = this.state;\n    const filteredrobots = robots.filter(robot => \n      robot.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\">\n\n        <h1>Robots Rolodex</h1>\n\n        <SearchBox \n          placeholder='search robots'\n          handleChange={ e => this.setState({ searchField: e.target.value}) }\n        />\n        \n        <CardList robots={filteredrobots} />\n      </div>\n    );\n  }  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}